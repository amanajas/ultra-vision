/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import controllers.RentController;
import controllers.UserController;
import controllers.WindowController;
import entities.Rental;
import entities.RentalStatus;
import entities.User;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JButton;
import java.awt.event.ActionListener;

import java.awt.event.ActionEvent;
import javax.swing.JRadioButton;
/**
 *
 * @author thiago.amanajas
 */
public class SearchWindow extends Window {
    
	/**
	 * 
	 */
	private static final long serialVersionUID = 6349183443667347421L;
	public static final String NAME = "search";
    private final UserController userController;
    private final RentController rentController;
   

    public SearchWindow() {
        super(NAME);
        initComponents();
        this.userController = new UserController();
        this.rentController = new RentController();
        refreshListRent();
    }
    
    public final void refreshListRent() {
        try {
            this.rentStatusTable.setModel(new RentTable(
                    this.rentController.getAllRentals()));
        } catch (SQLException ex) {
            Logger.getLogger(SearchWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public final void refreshListRent(List<Rental> list) {
        this.rentStatusTable.setModel(new RentTable(list));
    }
    
    public final void refreshListUser() {
        try {
            this.rentStatusTable.setModel(new UserTable(
                    this.userController.getAll()));
        } catch (SQLException ex) {
            Logger.getLogger(SearchWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public final void refreshListUser(List<User> list) {
        this.rentStatusTable.setModel(new UserTable(list));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        rentStatusTableScroll = new javax.swing.JScrollPane();
        rentStatusTable = new javax.swing.JTable();
        searchRentStatusField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        editSelectedRentButton = new javax.swing.JButton();

        JRadioButton searchUserRadioButton = new JRadioButton("Customer");
        searchUserRadioButton.setSelected(true);
        
        JRadioButton searchRentalRadioButton = new JRadioButton("Rental");
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ultra-Vision");
        setAlwaysOnTop(true);
        setName("frameWindow");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        desktopPane.setBackground(java.awt.Color.white);

        rentStatusTable.setFocusable(false);
        rentStatusTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        rentStatusTable.getTableHeader().setReorderingAllowed(false);
        rentStatusTableScroll.setViewportView(rentStatusTable);
        rentStatusTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        searchRentStatusField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        searchRentStatusField.setToolTipText("Search rent status by Title or Customer name");

        jLabel1.setText("Search rent status:");

        editSelectedRentButton.setText("Edit selected value");
        editSelectedRentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSelectedRentButtonActionPerformed(evt);
            }
        });

        desktopPane.setLayer(rentStatusTableScroll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPane.setLayer(searchRentStatusField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPane.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPane.setLayer(editSelectedRentButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        
        searchRentStatusButton = new JButton();
        searchRentStatusButton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		String search = searchRentStatusField.getText();
        		try {
        			if (searchUserRadioButton.isSelected()) {        			
        				List<User> list = userController.getUsersByName(search);
        				refreshListUser(list);
        			} else if (searchRentalRadioButton.isSelected()) {
	        			List<Rental> list = rentController.getRentsByTitle(search);
						refreshListRent(list);
        			}
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
        	}
        });
        searchRentStatusButton.setText("Search");
        

        javax.swing.GroupLayout desktopPaneLayout = new javax.swing.GroupLayout(desktopPane);
        desktopPaneLayout.setHorizontalGroup(
        	desktopPaneLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(desktopPaneLayout.createSequentialGroup()
        			.addGap(12)
        			.addGroup(desktopPaneLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(desktopPaneLayout.createSequentialGroup()
        					.addComponent(searchRentStatusField, GroupLayout.PREFERRED_SIZE, 455, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(searchRentStatusButton)
        					.addGap(82)
        					.addComponent(editSelectedRentButton))
        				.addGroup(desktopPaneLayout.createSequentialGroup()
        					.addComponent(jLabel1)
        					.addGap(18)
        					.addComponent(searchUserRadioButton)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(searchRentalRadioButton)))
        			.addContainerGap(322, Short.MAX_VALUE))
        		.addComponent(rentStatusTableScroll, GroupLayout.DEFAULT_SIZE, 905, Short.MAX_VALUE)
        );
        desktopPaneLayout.setVerticalGroup(
        	desktopPaneLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(desktopPaneLayout.createSequentialGroup()
        			.addGap(22)
        			.addGroup(desktopPaneLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel1)
        				.addComponent(searchUserRadioButton)
        				.addComponent(searchRentalRadioButton))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(desktopPaneLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(searchRentStatusField, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
        				.addComponent(editSelectedRentButton)
        				.addComponent(searchRentStatusButton))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(rentStatusTableScroll, GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE))
        );
        desktopPane.setLayout(desktopPaneLayout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addComponent(desktopPane, GroupLayout.PREFERRED_SIZE, 905, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addComponent(desktopPane, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        getContentPane().setLayout(layout);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        WindowController.getInstance().showLogin();
    }//GEN-LAST:event_formWindowClosed

    private void editSelectedRentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSelectedRentButtonActionPerformed
        // TODO: Put user and rental selected into the form
        int selectedRow = this.rentStatusTable.getSelectedRow();
        System.out.println("ROW: " + selectedRow);
        if (selectedRow >= 0) {
            RentalStatus selectedTitleValue = (RentalStatus) (
                    (RentStatusTable)this.rentStatusTable.getModel()
                    ).getRow(selectedRow);
            if (selectedTitleValue != null) {
                WindowController.getInstance().showRentStatusForm(selectedTitleValue);
            }
        }
    }//GEN-LAST:event_editSelectedRentButtonActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    }//GEN-LAST:event_formWindowActivated
    
	private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JButton editSelectedRentButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable rentStatusTable;
    private javax.swing.JScrollPane rentStatusTableScroll;
    private javax.swing.JTextField searchRentStatusField;
    private JButton searchRentStatusButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public Window copy() {
        return new SearchWindow();
    }

    @Override
    public void clear() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
