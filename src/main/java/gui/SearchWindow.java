/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import controllers.RentController;
import controllers.UserController;
import controllers.WindowController;
import entities.IEntity;
import entities.Rental;
import entities.User;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ButtonGroup;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.TableModel;
import javax.swing.JButton;
import java.awt.event.ActionListener;

import java.awt.event.ActionEvent;
import javax.swing.JRadioButton;
/**
 *
 * @author thiago.amanajas
 */
public class SearchWindow extends Window {
    
	/**
	 * 
	 */
	private static final long serialVersionUID = 6349183443667347421L;
	public static final String NAME = "search";
    private final UserController userController;
    private final RentController rentController;
   

    public SearchWindow() {
        super(NAME);
        initComponents();
        this.userController = new UserController();
        this.rentController = new RentController();
        refreshListRent();
    }
    
    public final void refreshListRent() {
        try {
            this.searchTable.setModel(new RentTable(
                    this.rentController.getAllRentals()));
        } catch (SQLException ex) {
            Logger.getLogger(SearchWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public final void refreshListRent(List<Rental> list) {
        this.searchTable.setModel(new RentTable(list));
    }
    
    public final void refreshListUser() {
        try {
            this.searchTable.setModel(new UserTable(
                    this.userController.getAll()));
        } catch (SQLException ex) {
            Logger.getLogger(SearchWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public final void refreshListUser(List<User> list) {
        this.searchTable.setModel(new UserTable(list));
    }
    
    public void setRentalSearch() {
    	this.searchRentalRadioButton.setSelected(true);
    	this.refreshListRent();
	}

	public void setUserSearch() {
		this.searchUserRadioButton.setSelected(true);
		this.refreshListUser();
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        searchTableScroll = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        searchField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        editSelectedItemButton = new javax.swing.JButton();

        searchUserRadioButton = new JRadioButton("Customer");
        searchUserRadioButton.setSelected(true);
        
        searchRentalRadioButton = new JRadioButton("Rental");
        
        ButtonGroup group = new ButtonGroup();
        
        group.add(searchUserRadioButton);
        group.add(searchRentalRadioButton);
        
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ultra-Vision");
        setAlwaysOnTop(true);
        setName("frameWindow");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        desktopPane.setBackground(java.awt.Color.white);

        searchTable.setFocusable(false);
        searchTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        searchTable.getTableHeader().setReorderingAllowed(false);
        searchTableScroll.setViewportView(searchTable);
        searchTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        searchField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        searchField.setToolTipText("Search rent status by Title or Customer name");

        jLabel1.setText("Search rent status:");

        editSelectedItemButton.setText("Edit selected value");
        editSelectedItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSelectedRentButtonActionPerformed(evt);
            }
        });

        desktopPane.setLayer(searchTableScroll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPane.setLayer(searchField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPane.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktopPane.setLayer(editSelectedItemButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        
        searchButton = new JButton();
        searchButton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		String search = searchField.getText();
        		try {
        			if (searchUserRadioButton.isSelected()) {        			
        				List<User> list = userController.getUsersByName(search);
        				refreshListUser(list);
        			} else if (searchRentalRadioButton.isSelected()) {
	        			List<Rental> list = rentController.getRentsByTitle(search);
						refreshListRent(list);
        			}
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
        	}
        });
        searchButton.setText("Search");
        

        javax.swing.GroupLayout desktopPaneLayout = new javax.swing.GroupLayout(desktopPane);
        desktopPaneLayout.setHorizontalGroup(
        	desktopPaneLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(desktopPaneLayout.createSequentialGroup()
        			.addGap(12)
        			.addGroup(desktopPaneLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(desktopPaneLayout.createSequentialGroup()
        					.addComponent(searchField, GroupLayout.PREFERRED_SIZE, 455, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(searchButton)
        					.addGap(82)
        					.addComponent(editSelectedItemButton))
        				.addGroup(desktopPaneLayout.createSequentialGroup()
        					.addComponent(jLabel1)
        					.addGap(18)
        					.addComponent(searchUserRadioButton)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(searchRentalRadioButton)))
        			.addContainerGap(322, Short.MAX_VALUE))
        		.addComponent(searchTableScroll, GroupLayout.DEFAULT_SIZE, 905, Short.MAX_VALUE)
        );
        desktopPaneLayout.setVerticalGroup(
        	desktopPaneLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(desktopPaneLayout.createSequentialGroup()
        			.addGap(22)
        			.addGroup(desktopPaneLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel1)
        				.addComponent(searchUserRadioButton)
        				.addComponent(searchRentalRadioButton))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(desktopPaneLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(searchField, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
        				.addComponent(editSelectedItemButton)
        				.addComponent(searchButton))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(searchTableScroll, GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE))
        );
        desktopPane.setLayout(desktopPaneLayout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addComponent(desktopPane, GroupLayout.PREFERRED_SIZE, 905, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addComponent(desktopPane, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        getContentPane().setLayout(layout);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        WindowController.getInstance().showMainWindow();;
    }//GEN-LAST:event_formWindowClosed

    private void editSelectedRentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSelectedRentButtonActionPerformed
        int selectedRow = this.searchTable.getSelectedRow();
        System.out.println("ROW: " + selectedRow);
        if (selectedRow >= 0) {
        	TableModel model = this.searchTable.getModel();
        	IEntity selectedTitleValue;
        	boolean isUserEdit = false;
        	if (model instanceof UserTable) {
        		isUserEdit = true;
        		selectedTitleValue = ((UserTable)model).getRow(selectedRow);
        	} else {
        		selectedTitleValue = ((RentTable)model).getRow(selectedRow);
        	}
            if (selectedTitleValue != null) {
            	if (isUserEdit) {
            		WindowController.getInstance().showUserForm((User) selectedTitleValue);
            	} else {
            		WindowController.getInstance().showRentalForm((Rental) selectedTitleValue);
            	}
            }
        }
    }//GEN-LAST:event_editSelectedRentButtonActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    }//GEN-LAST:event_formWindowActivated
    
	private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JButton editSelectedItemButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable searchTable;
    private javax.swing.JScrollPane searchTableScroll;
    private javax.swing.JTextField searchField;
    private JButton searchButton;
    private JRadioButton searchUserRadioButton;
    private JRadioButton searchRentalRadioButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public Window copy() {
        return new SearchWindow();
    }

    @Override
    public void clear() {
        searchField.setText("");
    }
}
